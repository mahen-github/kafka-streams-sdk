plugins {
    id 'java-library'
    id "maven-publish"
    id "com.github.spotbugs-base"
    id "com.diffplug.spotless"
    id 'net.nemerosa.versioning'
    id 'com.jfrog.artifactory'
    id 'com.github.davidmc24.gradle.plugin.avro'
}

allprojects {
    apply plugin: 'java-library'
    apply from: "$rootDir/gradle/artifactory.gradle"
    apply from: "$rootDir/gradle/spotless.gradle"
    apply from: "$rootDir/gradle/spotbugs.gradle"
    apply from: "$rootDir/gradle/jacoco.gradle"
    apply from: "$rootDir/gradle/checkstyle.gradle"
    apply from: "$rootDir/gradle/avro.gradle"
}

subprojects {
    apply plugin: 'maven-publish'
    group 'dev.mahendran.kafka'
    version '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    dependencies {

        //Kafka
        api "io.confluent:kafka-avro-serializer:$confluentVersion"
        api "io.confluent:kafka-streams-avro-serde:$confluentVersion"
        api "org.apache.kafka:kafka-streams:$kstreamsVersion"
        compileOnly "org.jetbrains:annotations:$annotationsVersion"
        implementation "org.apache.commons:commons-lang3:$commonsLangVersion"

        // Test
        testImplementation "org.apache.kafka:kafka-streams-test-utils:$kstreamsVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform()
        testLogging {
            exceptionFormat "full"
            showExceptions = true
            showStackTraces = true
            showStandardStreams = true
        }
    }

}
